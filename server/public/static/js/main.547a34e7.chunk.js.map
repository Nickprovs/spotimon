{"version":3,"sources":["styles/themes/lightTheme.js","styles/themes/darkTheme.js","components/common/theme.jsx","lib/misc/themeing.js","lib/simulation/info/domainInfo.js","lib/util/mathUtilities.js","components/common/spaceSimulator.jsx","lib/simulation/nBodyProblem.js","lib/simulation/info/spatialInfo.js","lib/simulation/info/manifestationInfo.js","lib/simulation/nBodyItem.js","lib/util/simulationUtilities.js","lib/util/elementUtilities.js","lib/util/audioAnalysisUtilities.js","components/common/slider.jsx","components/common/spinner.jsx","components/sposmos.jsx","components/common/standardButton.jsx","components/begin.jsx","components/notFound.jsx","components/playground.jsx","components/navBar.jsx","lib/util/urlUtilities.js","components/callback.jsx","components/issue.jsx","lib/http/spotifyClient.js","lib/http/httpService.js","lib/http/authService.js","components/main.jsx","App.js","serviceWorker.js","index.js"],"names":["LightTheme","DarkTheme","Theme","node","createRef","this","updateCSSVariables","prevProps","props","variables","Object","entries","forEach","prop","value","current","style","setProperty","children","ref","Component","Dark","Light","Theming","darkModeOn","localStorage","getItem","console","log","JSON","parse","setItem","DomainInfo","domainArgs","isPlaying","genre","basslineMass","getDefaultBasslineMassFromGenreCount","count","basslineRadius","getDefaultBasslineRadiusFromGenreCount","genreCount","Math","pow","MathUtilities","x","y","cx","cy","radius","paddedRadius","SpaceSimulator","state","animationId","isAnimating","animate","bind","canvasMousePosition","currentMouseOverObject","canvas","setCanvas","element","canvasContext","getContext","simulationDriver","width","height","updatePositionVectors","updateAccelerationVectors","updateVelocityVectors","clearRect","i","masses","length","massI","spatial","scale","manifestation","draw","domain","name","fillStyle","font","fillText","edgeX","vx","edgeY","vy","requestAnimationFrame","e","nativeEvent","offsetX","offsetY","onGravitationalObjectMouseEnter","onGravitationalObjectMouseLeave","gravitationalObjectUnderCursor","massesLen","j","positions","scaleFactor","massPosition","isPointWithinCircle","onGravitationalObjectClick","mouseX","mouseY","hitDectectionSuccessful","hitDetectedMass","shouldAnimate","cancelAnimationFrame","isEnabled","canvasClickable","backgroundColor","cursor","setAnimation","onMouseMove","handleCanvasMouseMove","onClick","a","async","handleCanvasMouseClick","nBodyProblem","params","g","dt","softeningConstant","z","vz","ax","ay","az","massJ","dx","dy","dz","distSq","f","m","sqrt","SpatialInfo","spatialArgs","ManifestationInfo","manifestationArgs","domainInfo","trailLength","hasRing","primaryColor","r","floor","random","b","storePosition","push","shift","positionsLen","transparency","circleScaleFactor","beginPath","arc","PI","fill","strokeStyle","lineWidth","stroke","NBodyItem","SimulationUtilities","isNegativeX","isNegativeY","isNegativeVx","isNegativeVy","isNegativeAx","isNegativeAy","uniqueGenreData","genresToUseCount","min","quarterSize","threeQuarterMark","frequentedGenres","slice","unfrequentedGenres","genres","concat","nBodyItems","defaultMass","getRandomGravitationalObjectData","item","ElementUtilities","styles","window","getComputedStyle","margin","parseFloat","ceil","offsetHeight","offsetWidth","AudioAnalysisUtilities","currentSegment","recentSegments","maxLoudness","averageRecent","reduce","comparisonWithRecentAverage","abs","loudness_start","Slider","max","handleInput","step","setState","target","onChange","className","type","Spinner","Sposmos","simulatorEnabled","simulationWidth","simulationHeight","simulationCursor","currentUris","playlistStartOffset","fetchingGenres","currentTrackData","id","playlist","analysis","progressInSeconds","recentLoudnessData","playRequested","playing","handleWindowResize","onCurrentlyPlayingCheckIn","checkInTimerId","page","setPage","header","setHeader","footer","setFooter","simulatorWidth","getAbsoluteWidth","simulatorHeight","getAbsoluteHeight","accessToken","setSimulatorSize","addEventListener","ResizeObserver","observe","fetchGenres","removeEventListener","spotifyClient","getNowPlayingAsync","nowPlaying","getSavedTracksAsync","savedTracks","history","pathname","issueHeader","getArtistsFromTracksAsync","savedArtists","getUniqueGenreDataFromArtists","error","issueBody","geNBodyItemsFromUniqueGenreData","hitDetectedGravitationalObject","genreName","searchPlaylists","playlists","items","playlistOffset","tracks","total","getPlaylistTracks","offset","res","track","uri","resetIsPlaying","errorType","previouslyPlaying","trackDataRetrievalDelay","startDate","Date","updateCurrentTrackDataFromIdAsync","endDate","getTime","position","setInterval","clearInterval","trackId","getAudioAnalysisForTrack","audioAnalysis","getMyCurrentPlayingTrack","currentlyPlaying","context","currentPlaylistId","split","getPlaylist","updateAudioAnalysisVisualizationEffects","segments","filter","s","start","duration","weightedVolumeAverage","loudness","getWeightedVolumeAverageForSegment","mass","isNaN","pop","newDt","factor","newBasslineMass","newBasslineRadius","playlistWebPlayerUrl","external_urls","spotify","open","playlistImageUrl","images","url","playlistName","visibility","handleGenreClick","handleGenreMouseEnter","handleGenreMouseLeave","handlePlaylistClick","alt","backgroundGolor","src","marginLeft","handleDeltaTChange","handleMassChange","loaderColor","sliderHandleColor","sliderTrackColor","bgColor","color","trackNameColor","trackArtistColor","showSaveIcon","callback","handlePlayerStatusChange","play","uris","token","withRouter","StandardButton","rest","Begin","muted","preload","autoPlay","loop","objectFit","href","NotFound","Playground","NavBar","isOpen","navBar","setNavBarRef","document","handleGlobalClick","event","contains","onThemeClick","handleNavBarClick","checked","handleTitleBarClick","to","textDecoration","htmlFor","rel","UrlUtilities","hashParams","q","location","hash","substring","exec","decodeURIComponent","Callback","urlParams","getUrlHashParams","onCallback","Issue","SpotifyClient","getAccessToken","totalPullCount","likedTracks","limit","getMySavedTracks","totalSavedCount","map","o","artists","getArtist","artist","artistGenre","sortedUniqueGenreData","genreKey","sort","getMyCurrentPlaybackState","image","album","Spotify","axios","interceptors","response","use","status","alert","Promise","reject","get","post","put","delete","apiEndpoint","newAccessTokenEndpoint","getNewAccessToken","refreshToken","request","http","Main","theming","handleTokenTimeout","getSavedDarkModeOnStatus","redirectIfOnInvalidPageForState","saveDarkModeOnStatus","access_token","refresh_token","setAccessToken","userProfile","getMe","product","authService","data","theme","handleToggleTheme","path","render","handleCallback","component","exact","from","App","Boolean","hostname","match","ReactDOM","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.547a34e7.chunk.js","sourcesContent":["const LightTheme = {\r\n  \"--b1\": \"#ffffff\",\r\n  \"--b2\": \"#e8e8e8\",\r\n  \"--b3\": \"#dedede\",\r\n  \"--b4\": \"#d1d1d1\",\r\n  \"--f1\": \"#000000\",\r\n  \"--s1\": \"#000000\",\r\n  \"--s2\": \"#FFFFFF\",\r\n  \"--s3\": \"#33C9FF\",\r\n  \"--s4\": \"#1DB954\",\r\n  \"--s5\": \"#1ED75F\",\r\n  \"--s6\": \"#5EAE59\",\r\n  \"--s7\": \"#2C2D4D\"\r\n};\r\n\r\nexport default LightTheme;\r\n","const DarkTheme = {\r\n  \"--b1\": \"#141414\",\r\n  \"--b2\": \"#1a1a1a\",\r\n  \"--b3\": \"#2b2b2b\",\r\n  \"--b4\": \"#3d3d3d\",\r\n  \"--f1\": \"#FFFFFF\",\r\n  \"--s1\": \"#000000\",\r\n  \"--s2\": \"#FFFFFF\",\r\n  \"--s3\": \"#33C9FF\",\r\n  \"--s4\": \"#1DB954\",\r\n  \"--s5\": \"#1ED75F\",\r\n  \"--s6\": \"#5EAE59\",\r\n  \"--s7\": \"#0A1136\"\r\n};\r\n\r\nexport default DarkTheme;\r\n","import React, { Component, createRef } from \"react\";\r\nimport LightTheme from \"../../styles/themes/lightTheme\";\r\nimport DarkTheme from \"../../styles/themes/darkTheme\";\r\n\r\nclass Theme extends Component {\r\n  node = createRef();\r\n\r\n  componentDidMount() {\r\n    this.updateCSSVariables();\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (this.props.variables !== prevProps.variables) {\r\n      this.updateCSSVariables();\r\n    }\r\n  }\r\n\r\n  updateCSSVariables() {\r\n    Object.entries(this.props.variables).forEach(([prop, value]) => this.node.current.style.setProperty(prop, value));\r\n  }\r\n\r\n  render() {\r\n    const { children } = this.props;\r\n    return <div ref={this.node}>{children}</div>;\r\n  }\r\n}\r\n\r\nTheme.Dark = DarkTheme;\r\nTheme.Light = LightTheme;\r\n\r\nexport default Theme;\r\n","const darkModeKey = \"darkModeOn\";\r\n\r\nexport default class Theming {\r\n  getSavedDarkModeOnStatus() {\r\n    let darkModeOn = localStorage.getItem(darkModeKey);\r\n    if (darkModeOn === null) {\r\n      console.log(\"No theme data in browser local storage\");\r\n      //This app looks best with dark mode on.\r\n      return true;\r\n    } else {\r\n      darkModeOn = JSON.parse(darkModeOn);\r\n    }\r\n\r\n    return darkModeOn;\r\n  }\r\n\r\n  saveDarkModeOnStatus(darkModeOn) {\r\n    localStorage.setItem(darkModeKey, darkModeOn);\r\n  }\r\n}\r\n","export default class DomainInfo {\r\n  static getDefaultBasslineMassFromGenreCount(genreCount) {\r\n    return 3.0024584e-6 * Math.pow(genreCount, 3.33);\r\n  }\r\n\r\n  static getDefaultBasslineRadiusFromGenreCount(genreCount) {\r\n    return 0.5 * genreCount;\r\n  }\r\n\r\n  constructor(domainArgs) {\r\n    this.isPlaying = domainArgs.isPlaying ? domainArgs.isPlaying : false;\r\n    this.genre = domainArgs.genre;\r\n    this.basslineMass = DomainInfo.getDefaultBasslineMassFromGenreCount(this.genre.count);\r\n    this.basslineRadius = DomainInfo.getDefaultBasslineRadiusFromGenreCount(this.genre.count);\r\n  }\r\n}\r\n","export default class MathUtilities {\r\n  static isPointWithinCircle(x, y, cx, cy, radius) {\r\n    const paddedRadius = radius + 5;\r\n    var distancesquared = (x - cx) * (x - cx) + (y - cy) * (y - cy);\r\n    return distancesquared <= paddedRadius * paddedRadius;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport MathUtilities from \"../../lib/util/mathUtilities\";\r\n\r\nclass SpaceSimulator extends Component {\r\n  state = {};\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    //Animation\r\n    this.animationId = null;\r\n    this.isAnimating = false;\r\n    this.animate = this.animate.bind(this);\r\n\r\n    //Canvas\r\n    this.canvasMousePosition = { x: -1, y: -1 };\r\n    this.currentMouseOverObject = null;\r\n    this.canvas = null;\r\n    this.setCanvas = element => {\r\n      this.canvas = element;\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.canvasContext = this.canvas.getContext(\"2d\");\r\n  }\r\n\r\n  animate() {\r\n    const { simulationDriver, width, height } = this.props;\r\n\r\n    simulationDriver.updatePositionVectors();\r\n    simulationDriver.updateAccelerationVectors();\r\n    simulationDriver.updateVelocityVectors();\r\n\r\n    this.canvasContext.clearRect(0, 0, width, height);\r\n\r\n    for (let i = 0; i < simulationDriver.masses.length; i++) {\r\n      const massI = simulationDriver.masses[i];\r\n      const x = width / 2 + massI.spatial.x * simulationDriver.scale;\r\n      const y = height / 2 + massI.spatial.y * simulationDriver.scale;\r\n\r\n      massI.manifestation.draw(this.canvasContext, x, y);\r\n\r\n      if (massI.domain.genre.name) {\r\n        this.canvasContext.fillStyle = \"white\";\r\n        this.canvasContext.font = \"16px Arial\";\r\n        this.canvasContext.fillText(massI.domain.genre.name, x + massI.manifestation.radius + 2, y - massI.manifestation.radius - 2);\r\n      }\r\n\r\n      const edgeX = width / 2 / simulationDriver.scale;\r\n      //Past Negative X Dir\r\n      if (massI.spatial.x < -edgeX) {\r\n        massI.spatial.x = edgeX;\r\n        massI.spatial.y *= -1;\r\n        massI.spatial.vx /= 2;\r\n        continue;\r\n      }\r\n\r\n      //Past Positive X Dir\r\n      if (massI.spatial.x > edgeX) {\r\n        massI.spatial.x = -edgeX;\r\n        massI.spatial.y *= -1;\r\n        massI.spatial.vx /= 2;\r\n        continue;\r\n      }\r\n\r\n      const edgeY = height / 2 / simulationDriver.scale;\r\n      //Past Negative Y Dir\r\n      if (massI.spatial.y < -edgeY) {\r\n        massI.spatial.y = edgeY;\r\n        massI.spatial.x *= -1;\r\n        massI.spatial.vy /= 2;\r\n        continue;\r\n      }\r\n\r\n      //Past Negative Y Dir\r\n      if (massI.spatial.y > edgeY) {\r\n        massI.spatial.y = -edgeY;\r\n        massI.spatial.x *= -1;\r\n        massI.spatial.vy /= 2;\r\n        continue;\r\n      }\r\n    }\r\n\r\n    this.animationId = requestAnimationFrame(this.animate);\r\n  }\r\n\r\n  //Sets current canvas mouse position as a global variable\r\n  //Hit detection handled when animating to avoid duplicate iteration\r\n  handleCanvasMouseMove(e) {\r\n    const { offsetX: x, offsetY: y } = e.nativeEvent;\r\n    this.canvasMousePosition.x = x;\r\n    this.canvasMousePosition.y = y;\r\n\r\n    const { simulationDriver, onGravitationalObjectMouseEnter, onGravitationalObjectMouseLeave } = this.props;\r\n\r\n    let gravitationalObjectUnderCursor = null;\r\n    const massesLen = simulationDriver.masses.length;\r\n\r\n    for (let i = 0; i < massesLen; i++) {\r\n      const massI = simulationDriver.masses[i];\r\n      for (let j = 0; j < massI.manifestation.positions.length; j++) {\r\n        const scaleFactor = j / massI.manifestation.positions.length;\r\n        const massPosition = massI.manifestation.positions[j];\r\n        if (\r\n          MathUtilities.isPointWithinCircle(\r\n            this.canvasMousePosition.x,\r\n            this.canvasMousePosition.y,\r\n            massPosition.x,\r\n            massPosition.y,\r\n            scaleFactor * massI.manifestation.radius\r\n          )\r\n        ) {\r\n          gravitationalObjectUnderCursor = massI;\r\n          break;\r\n        }\r\n        if (gravitationalObjectUnderCursor) break;\r\n      }\r\n    }\r\n    if (gravitationalObjectUnderCursor && this.currentMouseOverObject !== gravitationalObjectUnderCursor) {\r\n      this.currentMouseOverObject = gravitationalObjectUnderCursor;\r\n      onGravitationalObjectMouseEnter(gravitationalObjectUnderCursor);\r\n    }\r\n\r\n    if (!gravitationalObjectUnderCursor && this.currentMouseOverObject) {\r\n      onGravitationalObjectMouseLeave(this.currentMouseOverObject);\r\n      this.currentMouseOverObject = null;\r\n    }\r\n  }\r\n  //Detects if a hit has occured on the canvas\r\n  //Calls onGravitationalObjectClicked if there's a hit (passed in via props)\r\n  handleCanvasMouseClick(e) {\r\n    const { simulationDriver, onGravitationalObjectClick } = this.props;\r\n\r\n    const mouseX = e.nativeEvent.offsetX;\r\n    const mouseY = e.nativeEvent.offsetY;\r\n\r\n    const massesLen = simulationDriver.masses.length;\r\n    let hitDectectionSuccessful = false;\r\n    let hitDetectedMass = null;\r\n\r\n    for (let i = 0; i < massesLen; i++) {\r\n      const massI = simulationDriver.masses[i];\r\n\r\n      for (let i = 0; i < massI.manifestation.positions.length; i++) {\r\n        const massPosition = massI.manifestation.positions[i];\r\n        const scaleFactor = i / massI.manifestation.positions.length;\r\n\r\n        if (MathUtilities.isPointWithinCircle(mouseX, mouseY, massPosition.x, massPosition.y, massI.manifestation.radius * scaleFactor)) {\r\n          console.log(\"clicked\", massI);\r\n          hitDectectionSuccessful = true;\r\n          hitDetectedMass = massI;\r\n          break;\r\n        }\r\n      }\r\n\r\n      if (hitDectectionSuccessful) break;\r\n    }\r\n\r\n    if (!hitDectectionSuccessful) return;\r\n\r\n    onGravitationalObjectClick(hitDetectedMass);\r\n  }\r\n\r\n  setAnimation(shouldAnimate) {\r\n    if (shouldAnimate && !this.isAnimating) {\r\n      this.animationId = requestAnimationFrame(this.animate);\r\n      this.isAnimating = true;\r\n    }\r\n\r\n    if (!shouldAnimate && this.isAnimating) {\r\n      cancelAnimationFrame(this.animationId);\r\n      this.isAnimating = false;\r\n      this.animationId = null;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { isEnabled, width, height, canvasClickable, backgroundColor, cursor } = this.props;\r\n    this.setAnimation(isEnabled);\r\n    return (\r\n      <div style={{ cursor: canvasClickable ? \"pointer\" : \"default\" }}>\r\n        <canvas\r\n          ref={this.setCanvas}\r\n          onMouseMove={e => this.handleCanvasMouseMove(e)}\r\n          onClick={async e => await this.handleCanvasMouseClick(e)}\r\n          style={{ backgroundColor: backgroundColor, cursor: cursor }}\r\n          width={width}\r\n          height={height}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SpaceSimulator;\r\n","/*\r\n * Gravitational n-body algorithm\r\n */\r\n\r\nexport default class nBodyProblem {\r\n  constructor(params) {\r\n    this.g = params.g;\r\n    this.dt = params.dt;\r\n    this.softeningConstant = params.softeningConstant;\r\n    this.masses = params.masses;\r\n    this.scale = params.scale;\r\n  }\r\n\r\n  updatePositionVectors() {\r\n    const massesLen = this.masses.length;\r\n\r\n    for (let i = 0; i < massesLen; i++) {\r\n      const massI = this.masses[i].spatial;\r\n\r\n      massI.x += massI.vx * this.dt;\r\n      massI.y += massI.vy * this.dt;\r\n      massI.z += massI.vz * this.dt;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  updateVelocityVectors() {\r\n    const massesLen = this.masses.length;\r\n\r\n    for (let i = 0; i < massesLen; i++) {\r\n      const massI = this.masses[i].spatial;\r\n\r\n      massI.vx += massI.ax * this.dt;\r\n      massI.vy += massI.ay * this.dt;\r\n      massI.vz += massI.az * this.dt;\r\n    }\r\n  }\r\n\r\n  updateAccelerationVectors() {\r\n    const massesLen = this.masses.length;\r\n\r\n    for (let i = 0; i < massesLen; i++) {\r\n      let ax = 0;\r\n      let ay = 0;\r\n      let az = 0;\r\n\r\n      const massI = this.masses[i].spatial;\r\n\r\n      for (let j = 0; j < massesLen; j++) {\r\n        if (i !== j) {\r\n          const massJ = this.masses[j].spatial;\r\n          const dx = massJ.x - massI.x;\r\n          const dy = massJ.y - massI.y;\r\n          const dz = massJ.z - massI.z;\r\n\r\n          const distSq = dx * dx + dy * dy + dz * dz;\r\n\r\n          const f = (this.g * massJ.m) / (distSq * Math.sqrt(distSq + this.softeningConstant));\r\n\r\n          ax += dx * f;\r\n          ay += dy * f;\r\n          az += dz * f;\r\n        }\r\n      }\r\n\r\n      massI.ax = ax;\r\n      massI.ay = ay;\r\n      massI.az = az;\r\n    }\r\n\r\n    return this;\r\n  }\r\n}\r\n","export default class SpatialInfo {\r\n  constructor(spatialArgs) {\r\n    this.name = spatialArgs.name;\r\n    this.m = spatialArgs.m;\r\n    this.x = spatialArgs.x;\r\n    this.y = spatialArgs.y;\r\n    this.z = spatialArgs.z;\r\n    this.vx = spatialArgs.vx;\r\n    this.vy = spatialArgs.vy;\r\n    this.vz = spatialArgs.vz;\r\n    this.ax = spatialArgs.ax;\r\n    this.ay = spatialArgs.ay;\r\n    this.az = spatialArgs.az;\r\n  }\r\n}\r\n","export default class ManifestationInfo {\r\n  constructor(manifestationArgs, domainInfo) {\r\n    this.domain = domainInfo;\r\n    this.trailLength = manifestationArgs.trailLength;\r\n    this.radius = manifestationArgs.radius;\r\n    this.hasRing = manifestationArgs.hasRing;\r\n    this.primaryColor = {\r\n      r: Math.floor(Math.random() * 256), // Random between 0-255\r\n      g: Math.floor(Math.random() * 256), // Random between 0-255\r\n      b: Math.floor(Math.random() * 256) // Random between 0-255\r\n    };\r\n    this.positions = [];\r\n    this.storePosition = this.storePosition.bind(this);\r\n  }\r\n\r\n  storePosition(x, y) {\r\n    this.positions.push({\r\n      x,\r\n      y\r\n    });\r\n    if (this.positions.length > this.trailLength) this.positions.shift();\r\n  }\r\n\r\n  draw(canvasContext, x, y) {\r\n    this.storePosition(x, y);\r\n\r\n    const positionsLen = this.positions.length;\r\n\r\n    for (let i = 0; i < positionsLen; i++) {\r\n      let transparency;\r\n      let circleScaleFactor;\r\n\r\n      const scaleFactor = i / positionsLen;\r\n\r\n      if (i === positionsLen - 1) {\r\n        transparency = 1;\r\n        circleScaleFactor = 1;\r\n      } else {\r\n        transparency = scaleFactor / 2;\r\n        circleScaleFactor = scaleFactor;\r\n      }\r\n\r\n      const { r, g, b } = this.primaryColor;\r\n\r\n      //Special Operations for the main circle\r\n      if (i === positionsLen - 1) {\r\n        if (this.domain.isPlaying) {\r\n          canvasContext.beginPath();\r\n          canvasContext.arc(this.positions[i].x, this.positions[i].y, this.radius + this.radius * 1, 0, 2 * Math.PI);\r\n          canvasContext.fillStyle = `rgb(255, 250, 33, 0.1)`;\r\n          canvasContext.fill();\r\n\r\n          canvasContext.beginPath();\r\n          canvasContext.arc(this.positions[i].x, this.positions[i].y, this.radius + this.radius * 0.7, 0, 2 * Math.PI);\r\n          canvasContext.fillStyle = `rgb(255, 250, 33, 0.1)`;\r\n          canvasContext.fill();\r\n\r\n          canvasContext.beginPath();\r\n          canvasContext.arc(this.positions[i].x, this.positions[i].y, this.radius + this.radius * 0.4, 0, 2 * Math.PI);\r\n          canvasContext.fillStyle = `rgb(255, 250, 33, 0.1)`;\r\n          canvasContext.fill();\r\n        }\r\n\r\n        if (this.hasRing) {\r\n          canvasContext.beginPath();\r\n          canvasContext.arc(\r\n            this.positions[i].x,\r\n            this.positions[i].y,\r\n            1 * this.radius + this.radius * 0.25,\r\n            0,\r\n            2 * Math.PI\r\n          );\r\n          canvasContext.strokeStyle = `rgb(${r}, ${g}, ${b}, ${1})`;\r\n          canvasContext.lineWidth = 2;\r\n          canvasContext.stroke();\r\n        }\r\n\r\n        canvasContext.beginPath();\r\n        canvasContext.arc(this.positions[i].x, this.positions[i].y, circleScaleFactor * this.radius, 0, 2 * Math.PI);\r\n        canvasContext.fillStyle = `rgb(${r}, ${g}, ${b}, ${transparency})`;\r\n        canvasContext.fill();\r\n      }\r\n    }\r\n  }\r\n}\r\n","import SpatialInfo from \"./info/spatialInfo\";\r\nimport ManifestationInfo from \"./info/manifestationInfo\";\r\nimport DomainInfo from \"./info/domainInfo\";\r\n\r\nexport default class NBodyItem {\r\n  constructor(spatialArgs, manifestationArgs, domainArgs) {\r\n    this.spatial = new SpatialInfo(spatialArgs);\r\n    this.domain = new DomainInfo(domainArgs);\r\n    this.manifestation = new ManifestationInfo(manifestationArgs, this.domain);\r\n  }\r\n}\r\n","import DomainInfo from \"../simulation/info/domainInfo\";\r\nimport NBodyItem from \"../simulation/nBodyItem\";\r\n\r\nexport default class SimulationUtilities {\r\n  static getRandomGravitationalObjectData() {\r\n    const isNegativeX = Math.random() > 0.5;\r\n    const isNegativeY = Math.random() > 0.5;\r\n\r\n    const isNegativeVx = Math.random() > 0.5;\r\n    const isNegativeVy = Math.random() > 0.5;\r\n\r\n    const isNegativeAx = Math.random() > 0.5;\r\n    const isNegativeAy = Math.random() > 0.5;\r\n\r\n    let x = Math.random() * 2;\r\n    let y = Math.random() * 2;\r\n    const z = 0;\r\n\r\n    let vx = Math.random() * 4;\r\n    let vy = Math.random() * 4;\r\n    const vz = 0;\r\n\r\n    let ax = Math.random() * 1;\r\n    let ay = Math.random() * 1;\r\n    const az = 0;\r\n\r\n    if (isNegativeVx) vx *= -1;\r\n    if (isNegativeVy) vy *= -1;\r\n\r\n    if (isNegativeX) x *= -1;\r\n    if (isNegativeY) y *= -1;\r\n\r\n    if (isNegativeAx) ax *= -1;\r\n    if (isNegativeAy) ay *= -1;\r\n\r\n    return { x, y, z, vx, vy, vz, ax, ay, az };\r\n  }\r\n\r\n  static geNBodyItemsFromUniqueGenreData(uniqueGenreData, trailLength = 8) {\r\n    const genresToUseCount = Math.min(25, uniqueGenreData.length);\r\n    const quarterSize = genresToUseCount.length / 4;\r\n    const threeQuarterMark = 3 * (quarterSize - 1);\r\n    const frequentedGenres = uniqueGenreData.slice(0, threeQuarterMark);\r\n    const unfrequentedGenres = uniqueGenreData.slice(threeQuarterMark, genresToUseCount - 1);\r\n    const genres = frequentedGenres.concat(unfrequentedGenres);\r\n\r\n    let nBodyItems = [];\r\n\r\n    for (let genre of genres) {\r\n      const defaultMass = DomainInfo.getDefaultBasslineMassFromGenreCount(genre.count);\r\n\r\n      const manifestationArgs = {\r\n        defaultMass: defaultMass,\r\n        trailLength: trailLength,\r\n        radius: DomainInfo.getDefaultBasslineRadiusFromGenreCount(genre.count),\r\n        hasRing: Math.random() > 0.6\r\n      };\r\n\r\n      const spatialArgs = {\r\n        m: defaultMass,\r\n        ...SimulationUtilities.getRandomGravitationalObjectData()\r\n      };\r\n\r\n      const domainArgs = {\r\n        genre: genre\r\n      };\r\n\r\n      const item = new NBodyItem(spatialArgs, manifestationArgs, domainArgs);\r\n      nBodyItems.push(item);\r\n    }\r\n\r\n    return nBodyItems;\r\n  }\r\n}\r\n","export default class ElementUtilities {\r\n  static getAbsoluteHeight(element) {\r\n    var styles = window.getComputedStyle(element);\r\n    var margin = parseFloat(styles[\"marginTop\"]) + parseFloat(styles[\"marginBottom\"]);\r\n    return Math.ceil(element.offsetHeight + margin);\r\n  }\r\n\r\n  static getAbsoluteWidth(element) {\r\n    var styles = window.getComputedStyle(element);\r\n    var margin = parseFloat(styles[\"marginLeft\"]) + parseFloat(styles[\"marginRight\"]);\r\n    return Math.ceil(element.offsetWidth + margin);\r\n  }\r\n}\r\n","export default class AudioAnalysisUtilities {\r\n  static getWeightedVolumeAverageForSegment(currentSegment, recentSegments, maxLoudness) {\r\n    //Get the average loudness sample from the set of recent samples\r\n    const averageRecent = recentSegments.reduce((a, b) => a + b, 0) / recentSegments.length;\r\n\r\n    //1.) Get a comparison with the recent average\r\n    const comparisonWithRecentAverage = Math.abs(currentSegment.loudness_start / averageRecent);\r\n\r\n    //2.) Get a comparison with the last sample\r\n    const comparisonWithLast = Math.abs(currentSegment.loudness_start / recentSegments[recentSegments.length - 1]);\r\n\r\n    //3.) Get a strong comparison with the sample that contained the max loudness\r\n    const comparisonWithMaxLoudness = Math.pow(Math.abs(maxLoudness / currentSegment.loudness_start), 1.7);\r\n\r\n    //Compute a weighted volume average\r\n    const weightedVolumeAverage =\r\n      0.4 * comparisonWithLast + 0.4 * comparisonWithRecentAverage + 0.2 * comparisonWithMaxLoudness;\r\n\r\n    return weightedVolumeAverage;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport \"../../styles/slider.css\";\r\n\r\nclass Slider extends Component {\r\n  state = {\r\n    value: 50,\r\n    min: 1,\r\n    max: 100\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.handleInput = this.handleInput.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { min, max, value, step } = this.props;\r\n    this.setState({ step });\r\n    this.setState({ min });\r\n    this.setState({ max });\r\n    this.setState({ value });\r\n  }\r\n\r\n  handleInput(e) {\r\n    console.log(\"test\", e.target.value);\r\n    const { onChange } = this.props;\r\n    this.setState({ value: e.target.value });\r\n    if (onChange) onChange(e.target.value);\r\n  }\r\n\r\n  render() {\r\n    const { min, max, value, step } = this.state;\r\n\r\n    return (\r\n      <div className=\"slidecontainer\">\r\n        <input\r\n          step={step}\r\n          onChange={value => this.handleInput(value)}\r\n          type=\"range\"\r\n          min={min}\r\n          max={max}\r\n          value={value}\r\n          className=\"slider\"\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Slider;\r\n","import React from \"react\";\r\nimport \"../../styles/spinner.css\";\r\n\r\nconst Spinner = () => {\r\n  return <div className=\"spinner\"></div>;\r\n};\r\n\r\nexport default Spinner;\r\n","import React, { Component } from \"react\";\r\nimport DomainInfo from \"../lib/simulation/info/domainInfo\";\r\nimport SpotifyPlayer from \"react-spotify-web-playback\";\r\nimport SpaceSimulator from \"./common/spaceSimulator\";\r\nimport nBodyProblem from \"../lib/simulation/nBodyProblem\";\r\nimport SimulationUtilities from \"../lib/util/simulationUtilities\";\r\nimport ElementUtilities from \"../lib/util/elementUtilities\";\r\nimport AudioAnalysisUtilities from \"../lib/util/audioAnalysisUtilities\";\r\nimport Slider from \"./common/slider\";\r\nimport Spinner from \"./common/spinner\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nconst g = 39.5;\r\nlet dt = 0.0005; //0.005 years is equal to 1.825 days\r\nconst softeningConstant = 0.15;\r\nconst scale = 70;\r\n\r\nclass Sposmos extends Component {\r\n  state = {\r\n    simulatorEnabled: false,\r\n    simulationWidth: 0,\r\n    simulationHeight: 0,\r\n    simulationCursor: \"default\",\r\n    currentUris: [],\r\n    playlistStartOffset: 0,\r\n    fetchingGenres: false,\r\n    currentTrackData: {\r\n      id: \"\",\r\n      playlist: null,\r\n      analysis: null,\r\n      progressInSeconds: 0,\r\n      recentLoudnessData: []\r\n    },\r\n    playRequested: false,\r\n    playing: false\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n\r\n    this.handleWindowResize = this.handleWindowResize.bind(this);\r\n    this.onCurrentlyPlayingCheckIn = this.onCurrentlyPlayingCheckIn.bind(this);\r\n    this.checkInTimerId = null;\r\n\r\n    this.page = null;\r\n    this.setPage = element => {\r\n      this.page = element;\r\n    };\r\n\r\n    this.canvas = null;\r\n    this.setCanvas = element => {\r\n      this.canvas = element;\r\n    };\r\n\r\n    this.header = null;\r\n    this.setHeader = element => {\r\n      this.header = element;\r\n    };\r\n\r\n    this.footer = null;\r\n    this.setFooter = element => {\r\n      this.footer = element;\r\n    };\r\n\r\n    //The N-Body Problem object which embodies our simulator data and calculations\r\n    this.simulationDriver = new nBodyProblem({\r\n      g: g,\r\n      dt: dt,\r\n      masses: [],\r\n      softeningConstant: softeningConstant,\r\n      scale: scale\r\n    });\r\n  }\r\n\r\n  setSimulatorSize() {\r\n    if (!this.page) return;\r\n\r\n    this.setState({ simulatorWidth: ElementUtilities.getAbsoluteWidth(this.page) });\r\n    this.setState({\r\n      simulatorHeight:\r\n        ElementUtilities.getAbsoluteHeight(this.page) * 0.99 -\r\n        ElementUtilities.getAbsoluteHeight(this.header) -\r\n        ElementUtilities.getAbsoluteHeight(this.footer)\r\n    });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    //If we're not authenticated by now... the main component will redirect us...\r\n    if (!this.props.accessToken) return;\r\n\r\n    this.setSimulatorSize();\r\n    window.addEventListener(\"resize\", this.handleWindowResize);\r\n    new ResizeObserver(this.handleWindowResize).observe(this.footer);\r\n    await this.fetchGenres();\r\n  }\r\n\r\n  handleWindowResize() {\r\n    this.setSimulatorSize();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this.handleWindowResize);\r\n  }\r\n\r\n  async handleGetNowPlaying() {\r\n    const { spotifyClient } = this.props;\r\n    const nowPlaying = await spotifyClient.getNowPlayingAsync();\r\n    if (nowPlaying) this.setState({ nowPlaying });\r\n  }\r\n\r\n  async fetchGenres() {\r\n    let uniqueGenreData = [];\r\n    const { spotifyClient } = this.props;\r\n\r\n    this.setState({ fetchingGenres: true });\r\n    try {\r\n      const savedTracks = await spotifyClient.getSavedTracksAsync(300);\r\n      if (savedTracks.length < 20) {\r\n        this.props.history.push({\r\n          pathname: \"/issue\",\r\n          state: { issueHeader: `You must have at least 20 liked / saved songs to continue.` }\r\n        });\r\n      }\r\n\r\n      const savedArtists = await spotifyClient.getArtistsFromTracksAsync(savedTracks);\r\n      uniqueGenreData = spotifyClient.getUniqueGenreDataFromArtists(savedArtists);\r\n    } catch (ex) {\r\n      console.error(ex);\r\n      this.props.history.push({\r\n        pathname: \"/issue\",\r\n        state: { issueHeader: `You must have at least 20 liked / saved songs to continue.`, issueBody: ex }\r\n      });\r\n      return;\r\n    } finally {\r\n      this.setState({ fetchingGenres: false });\r\n    }\r\n\r\n    this.simulationDriver.masses = SimulationUtilities.geNBodyItemsFromUniqueGenreData(uniqueGenreData, 8);\r\n    this.setState({ simulatorEnabled: true });\r\n  }\r\n\r\n  async handleGenreClick(hitDetectedGravitationalObject) {\r\n    const { spotifyClient } = this.props;\r\n\r\n    //Find a playlist from the genre name\r\n    const genreName = hitDetectedGravitationalObject.domain.genre.name;\r\n    const playlists = await spotifyClient.searchPlaylists(`the sound of ${genreName}`);\r\n    const playlist = playlists.playlists.items[0];\r\n    const playlistOffset = Math.min(Math.floor(Math.random() * 100), Math.floor(Math.random() * playlist.tracks.total - 1));\r\n\r\n    //Get a song to play from that genre offset by a random value\r\n    const res = await spotifyClient.getPlaylistTracks(playlist.id, { offset: playlistOffset });\r\n    const song = res.items[0].track;\r\n\r\n    //Update state information necessary to get the player going\r\n    this.setState({ playlistStartOffset: playlistOffset });\r\n    this.setState({ currentUris: [playlist.uri] });\r\n    this.setState({ playRequested: true });\r\n\r\n    this.resetIsPlaying();\r\n    hitDetectedGravitationalObject.domain.isPlaying = true;\r\n  }\r\n\r\n  handleGenreMouseEnter(hitDetectedGravitationalObject) {\r\n    this.setState({ simulationCursor: \"pointer\" });\r\n  }\r\n\r\n  handleGenreMouseLeave(hitDetectedGravitationalObject) {\r\n    this.setState({ simulationCursor: \"default\" });\r\n  }\r\n\r\n  async handlePlayerStatusChange(state) {\r\n    console.log(\"Player Status\", state);\r\n\r\n    //If the web playback sdk is in error, we're broken. Navigate away.\r\n    if (state.error) {\r\n      this.props.history.push({\r\n        pathname: \"/issue\",\r\n        state: { issueHeader: `Spotify player error - Type: ${state.errorType}, Error: ${state.error}` }\r\n      });\r\n    }\r\n\r\n    //Cache the previously playing state and set the currently playing state based on the playback sdk.\r\n    const previouslyPlaying = this.state.playing;\r\n    this.setState({ playing: state.isPlaying });\r\n\r\n    let trackDataRetrievalDelay = 0;\r\n\r\n    //Get the latest track data if we've changed\r\n    if (this.state.currentTrackData.id != state.track.id) {\r\n      const startDate = new Date();\r\n      try {\r\n        await this.updateCurrentTrackDataFromIdAsync(state.track.id);\r\n      } catch (ex) {\r\n        console.error(ex);\r\n      }\r\n      const endDate = new Date();\r\n      trackDataRetrievalDelay = (endDate.getTime() - startDate.getTime()) / 100;\r\n    }\r\n\r\n    //If we're playing... set the current position in the track\r\n    if (state.isPlaying) {\r\n      this.setState({ currentTrackData: { ...this.state.currentTrackData, progressInSeconds: state.position + trackDataRetrievalDelay } });\r\n\r\n      //If we're playing but were not previously... we need to start the check in timer.\r\n      if (!previouslyPlaying) this.checkInTimerId = setInterval(this.onCurrentlyPlayingCheckIn, 200);\r\n    }\r\n\r\n    //If we're not playing... clear any potential timer's we had and update the state\r\n    if (!state.isPlaying) {\r\n      clearInterval(this.checkInTimerId);\r\n      this.setState({ playRequested: false });\r\n    }\r\n  }\r\n\r\n  async updateCurrentTrackDataFromIdAsync(trackId) {\r\n    const { spotifyClient } = this.props;\r\n\r\n    try {\r\n      const audioAnalysis = await spotifyClient.getAudioAnalysisForTrack(trackId);\r\n      const currentlyPlaying = await spotifyClient.getMyCurrentPlayingTrack();\r\n      let playlist = null;\r\n      if (currentlyPlaying.context.type == \"playlist\") {\r\n        const currentPlaylistId = currentlyPlaying.context.uri.split(\"playlist:\")[1];\r\n        playlist = await spotifyClient.getPlaylist(currentPlaylistId);\r\n      }\r\n\r\n      const currentTrackData = {\r\n        ...this.state.currentTrackData,\r\n        id: trackId,\r\n        analysis: audioAnalysis,\r\n        progressInSeconds: 0,\r\n        playlist: playlist\r\n      };\r\n      this.setState({ currentTrackData });\r\n    } catch (ex) {\r\n      console.error(\"Issue grabbing track data\", ex);\r\n      return;\r\n    }\r\n  }\r\n\r\n  onCurrentlyPlayingCheckIn() {\r\n    const currentTrackData = { ...this.state.currentTrackData };\r\n    currentTrackData.progressInSeconds += 0.2;\r\n    this.setState({ currentTrackData });\r\n\r\n    this.updateAudioAnalysisVisualizationEffects();\r\n  }\r\n\r\n  updateAudioAnalysisVisualizationEffects() {\r\n    const currentTrackData = { ...this.state.currentTrackData };\r\n\r\n    //We can only perform visualization if we have the tracks audio analysis\r\n    if (!currentTrackData.analysis) return;\r\n\r\n    //Get the audio analysis segment for the current timestamp (progress in seconds)\r\n    let currentSegment = currentTrackData.analysis.segments.filter(\r\n      s => s.start <= currentTrackData.progressInSeconds && s.start + s.duration > currentTrackData.progressInSeconds\r\n    )[0];\r\n\r\n    //If we failed to get a current audio analysis segment... we can't do much here\r\n    if (!currentSegment) return;\r\n\r\n    let weightedVolumeAverage = 1;\r\n    const maxLoudness = currentTrackData.analysis.track.loudness;\r\n    const idealRecentSampleCount = 6;\r\n    const recentSegments = currentTrackData.recentLoudnessData;\r\n\r\n    //If we have enough recent loudness samples to compare to the current sample\r\n    if (recentSegments.length >= idealRecentSampleCount) {\r\n      weightedVolumeAverage = AudioAnalysisUtilities.getWeightedVolumeAverageForSegment(currentSegment, recentSegments, maxLoudness);\r\n    }\r\n\r\n    //Modify the mass and time based on the weighted volume average for the current sample\r\n    this.simulationDriver.dt = 3 * dt * weightedVolumeAverage;\r\n    const mass = this.simulationDriver.masses.filter(m => m.domain.isPlaying)[0];\r\n    if (mass) {\r\n      if (!isNaN(weightedVolumeAverage)) {\r\n        mass.manifestation.radius = mass.domain.basslineRadius + 1.0 * mass.domain.basslineRadius * weightedVolumeAverage;\r\n      }\r\n    }\r\n\r\n    //Push the current loudness sample on the set of recent samples and pop the oldest if we're full.\r\n    recentSegments.push(currentSegment.loudness_start);\r\n    if (recentSegments.count > idealRecentSampleCount) recentSegments.pop();\r\n  }\r\n\r\n  resetIsPlaying() {\r\n    //Reset's each space item's isPlaying flag contained in its domain-specific info\r\n    for (let i = 0; i < this.simulationDriver.masses.length - 1; i++) {\r\n      const mass = this.simulationDriver.masses[i];\r\n      mass.domain.isPlaying = false;\r\n    }\r\n  }\r\n\r\n  handleDeltaTChange(newDt) {\r\n    dt = newDt;\r\n    //Updating the simulator driver's dt will affect it's calculations while animating each frame\r\n    this.simulationDriver.dt = newDt;\r\n  }\r\n\r\n  handleMassChange(factor) {\r\n    for (let i = 0; i < this.simulationDriver.masses.length - 1; i++) {\r\n      const mass = this.simulationDriver.masses[i];\r\n\r\n      //Calculate a new bassline data based off the default data and the slider value\r\n      const defaultBassLineMass = DomainInfo.getDefaultBasslineMassFromGenreCount(mass.domain.genre.count);\r\n      const defaultBassLineRadius = DomainInfo.getDefaultBasslineRadiusFromGenreCount(mass.domain.genre.count);\r\n      const newBasslineMass = defaultBassLineMass * factor;\r\n      const newBasslineRadius = defaultBassLineRadius * factor;\r\n\r\n      //Set both the bassline data and current data.\r\n      mass.domain.basslineMass = newBasslineMass;\r\n      mass.domain.basslineRadius = newBasslineRadius;\r\n      mass.spatial.m = newBasslineMass;\r\n      mass.manifestation.radius = newBasslineRadius;\r\n    }\r\n  }\r\n\r\n  handlePlaylistClick() {\r\n    const { currentTrackData } = this.state;\r\n\r\n    //Try to parse a navigatable playlist. Do nothing if we can't\r\n    let playlistWebPlayerUrl = \"\";\r\n    if (currentTrackData.playlist && currentTrackData.playlist.external_urls)\r\n      playlistWebPlayerUrl = currentTrackData.playlist.external_urls.spotify;\r\n    if (!playlistWebPlayerUrl) return;\r\n\r\n    //Open the playlist in a specific tab\r\n    window.open(playlistWebPlayerUrl, \"_newtab\");\r\n  }\r\n\r\n  render() {\r\n    const {\r\n      simulationCursor,\r\n      simulatorEnabled,\r\n      simulatorWidth,\r\n      simulatorHeight,\r\n      playlistStartOffset,\r\n      canvasClickable,\r\n      currentUris,\r\n      currentTrackData,\r\n      playRequested,\r\n      playing,\r\n      fetchingGenres\r\n    } = this.state;\r\n\r\n    const { accessToken } = this.props;\r\n\r\n    let playlistImageUrl = \"\";\r\n    if (currentTrackData.playlist && currentTrackData.playlist.images) playlistImageUrl = currentTrackData.playlist.images[0].url;\r\n\r\n    let playlistName = \"\";\r\n    if (currentTrackData.playlist) playlistName = currentTrackData.playlist.name;\r\n\r\n    return (\r\n      <div style={{ width: \"100%\", height: \"100%\" }}>\r\n        <div style={{ visibility: fetchingGenres ? \"visible\" : \"hidden\" }} className=\"spinner-container\">\r\n          <Spinner />\r\n        </div>\r\n\r\n        <div className=\"simulator-container dashboard-text\" style={{ width: \"100%\", height: \"100%\" }} ref={this.setPage}>\r\n          <div style={{ cursor: canvasClickable ? \"pointer\" : \"default\" }}>\r\n            <SpaceSimulator\r\n              simulationDriver={this.simulationDriver}\r\n              isEnabled={simulatorEnabled}\r\n              backgroundColor={\"var(--s7)\"}\r\n              width={simulatorWidth}\r\n              height={simulatorHeight}\r\n              cursor={simulationCursor}\r\n              onGravitationalObjectClick={async item => this.handleGenreClick(item)}\r\n              onGravitationalObjectMouseEnter={item => this.handleGenreMouseEnter(item)}\r\n              onGravitationalObjectMouseLeave={item => this.handleGenreMouseLeave(item)}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"dashboard-area standard-text\" ref={this.setHeader}>\r\n            {playing && currentTrackData.playlist && (\r\n              <div className=\"dashboard-info-area playlist-section\">\r\n                <div onClick={this.handlePlaylistClick.bind(this)} className=\"dashboard-section-left playlist-section\">\r\n                  <img alt=\"playlist\" style={{ backgroundGolor: \"green\" }} width=\"40\" height=\"40\" src={playlistImageUrl} />\r\n                  <div style={{ marginLeft: \"4px\" }}>\r\n                    <label style={{ cursor: \"inherit\" }}>Playlist</label>\r\n                    <br />\r\n                    <label style={{ cursor: \"inherit\" }}>{playlistName}</label>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n\r\n            {/* Time Slider */}\r\n            <div className=\"dashboard-c1-area\">\r\n              <div className=\"dashboard-section-center\">\r\n                <label>Time</label>\r\n                <br />\r\n                <Slider\r\n                  step={0.000001}\r\n                  min={0.00001}\r\n                  value={0.0005}\r\n                  max={0.002}\r\n                  onChange={this.handleDeltaTChange.bind(this)}\r\n                  style={{ margin: \"10px\" }}\r\n                />\r\n              </div>\r\n            </div>\r\n\r\n            {/* Mass Slider */}\r\n            <div className=\"dashboard-c2-area\">\r\n              <div className=\"dashboard-section-center\">\r\n                <label>Mass</label>\r\n                <br />\r\n                <Slider step={0.1} min={0.1} value={1} max={3} onChange={this.handleMassChange.bind(this)} style={{ margin: \"10px\" }} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <div ref={this.setFooter}>\r\n            <SpotifyPlayer\r\n              styles={{\r\n                loaderColor: \"var(--f1)\",\r\n                sliderHandleColor: \"var(--f1)\",\r\n                sliderTrackColor: \"var(--b3)\",\r\n                bgColor: \"var(--b2)\",\r\n                color: \"var(--f1)\",\r\n                trackNameColor: \"var(--f1)\",\r\n                trackArtistColor: \"var(--f1)\"\r\n              }}\r\n              showSaveIcon={true}\r\n              offset={playlistStartOffset}\r\n              callback={async state => this.handlePlayerStatusChange(state)}\r\n              play={playRequested}\r\n              uris={currentUris}\r\n              token={accessToken}\r\n            />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Sposmos);\r\n","import React from \"react\";\r\nimport \"../../styles/standardButton.css\";\r\n\r\nconst StandardButton = ({ children, className, onClick, ...rest }) => {\r\n  return (\r\n    <button onClick={onClick} className={\"standardButton \" + className} {...rest}>\r\n      {children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default StandardButton;\r\n","import React from \"react\";\r\nimport StandardButton from \"./common/standardButton\";\r\n\r\nconst Begin = () => {\r\n  return (\r\n    <div className=\"enter-container\">\r\n      <div className=\"banner-area\">\r\n        <h2 className=\"banner-text standard-text\">The Universe Bumps With You</h2>\r\n      </div>\r\n      <div className=\"preview-area\">\r\n        <video\r\n          className=\"preview-video\"\r\n          width=\"100%\"\r\n          height=\"100%\"\r\n          id=\"preview\"\r\n          muted={true}\r\n          preload=\"auto\"\r\n          autoPlay={true}\r\n          loop=\"loop\"\r\n          style={{ objectFit: \"cover\" }}\r\n        >\r\n          <source src=\"/Videos/preview.mp4\" type=\"video/mp4\" />\r\n        </video>\r\n      </div>\r\n\r\n      <div className=\"info-area\">\r\n        <ul className=\"standard-text info-list\">\r\n          <li>\r\n            Requirements\r\n            <ul>\r\n              <li>Spotify Premium</li>\r\n              <li>\"Liked Songs\" Playlist must have content.</li>\r\n            </ul>\r\n          </li>\r\n          <li>\r\n            What Is This?\r\n            <ul>\r\n              <li>Explore your most and least frequented genres.</li>\r\n              <li>Discover something new in your sposmos.</li>\r\n              <li>Visualize your tunes.</li>\r\n            </ul>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n\r\n      {/* What Is This?\r\n            <ul>\r\n              <li>Explore your recent musical taste from your most frequented to least frequented genres.</li>\r\n              <li>Visualize your taste by the size of the genres and the way they \"bump\" to the music.</li>\r\n\r\n              <li>Hit \"Begin\" to authenticate directly with Spotify.</li>\r\n            </ul> */}\r\n      <div className=\"enter-area\">\r\n        <div className=\"enter-button-container\">\r\n          <a href=\"https://spotimon.com/api/auth/login\">\r\n            <StandardButton>Login With Spotify</StandardButton>\r\n          </a>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Begin;\r\n","import React, { Component } from \"react\";\r\n\r\nclass NotFound extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"10px\" }} className=\"center-wrapper\">\r\n        <h1>Not Found :(</h1>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NotFound;\r\n","import React, { Component } from \"react\";\r\nimport Spinner from \"./common/spinner\";\r\n\r\nclass Playground extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div className=\"container\">\r\n        <div className=\"header\" style={{ backgroundColor: \"red\" }}>\r\n          HEADER\r\n        </div>\r\n        <div className=\"menu \" style={{ backgroundColor: \"green\" }}>\r\n          MENU\r\n        </div>\r\n        <div className=\"content\" style={{ backgroundColor: \"tomato\", height: \"968px\" }}>\r\n          <Spinner />\r\n        </div>\r\n        <div className=\"footer\" style={{ backgroundColor: \"purple\" }}>\r\n          FOOTER\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Playground;\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport \"../styles/navBar.css\";\r\n\r\nclass NavBar extends Component {\r\n  state = {\r\n    isOpen: false\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.navBar = null;\r\n    this.setNavBarRef = element => {\r\n      this.navBar = element;\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    document.addEventListener(\"mousedown\", this.handleGlobalClick.bind(this));\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener(\"mousedown\", this.handleGlobalClick.bind(this));\r\n  }\r\n\r\n  handleGlobalClick(event) {\r\n    if (this.navBar && !this.navBar.contains(event.target)) {\r\n      this.setState({ isOpen: false });\r\n    }\r\n  }\r\n\r\n  handleNavBarClick() {\r\n    this.setState({ isOpen: !this.state.isOpen });\r\n  }\r\n\r\n  handleTitleBarClick() {\r\n    if (this.state.isOpen) this.setState({ isOpen: false });\r\n  }\r\n\r\n  render() {\r\n    const { onThemeClick } = this.props;\r\n    return (\r\n      <div ref={this.setNavBarRef} className=\"nav\">\r\n        <input\r\n          type=\"checkbox\"\r\n          id=\"nav-check\"\r\n          onChange={this.handleNavBarClick.bind(this)}\r\n          checked={this.state.isOpen}\r\n        />\r\n        <div className=\"nav-header\">\r\n          <Link\r\n            onClick={this.handleTitleBarClick.bind(this)}\r\n            to=\"/\"\r\n            style={{ textDecoration: \"none\" }}\r\n            className=\"nav-title\"\r\n          >\r\n            spotimon\r\n          </Link>\r\n        </div>\r\n        <div className=\"nav-btn\">\r\n          <label htmlFor=\"nav-check\">\r\n            <span></span>\r\n            <span></span>\r\n            <span></span>\r\n          </label>\r\n        </div>\r\n\r\n        <div className=\"nav-links\" onClick={this.handleNavBarClick.bind(this)}>\r\n          <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://www.nickprovs.com\">\r\n            Author\r\n          </a>\r\n          <a style={{ cursor: \"pointer\" }} onClick={onThemeClick}>\r\n            Theme\r\n          </a>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default NavBar;\r\n","export default class UrlUtilities {\r\n  static getUrlHashParams() {\r\n    var hashParams = {};\r\n    var e,\r\n      r = /([^&;=]+)=?([^&;]*)/g,\r\n      q = window.location.hash.substring(1);\r\n    while ((e = r.exec(q))) {\r\n      hashParams[e[1]] = decodeURIComponent(e[2]);\r\n    }\r\n    return hashParams;\r\n  }\r\n}\r\n","import React, { Component } from \"react\";\r\nimport UrlUtilities from \"../lib/util/urlUtilities\";\r\n\r\nclass Callback extends Component {\r\n  state = {};\r\n  render() {\r\n    return (\r\n      <div style={{ margin: \"10px\" }} className=\"center-wrapper\">\r\n        <h1>Callback</h1>\r\n        <br />\r\n        <h1>Preparing to redirect...</h1>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    let urlParams = UrlUtilities.getUrlHashParams();\r\n    this.props.onCallback(urlParams);\r\n  }\r\n}\r\n\r\nexport default Callback;\r\n","import React from \"react\";\r\n\r\nconst Issue = ({ history }) => {\r\n  let issueHeader = \"Issue\";\r\n  let issueBody = \"\";\r\n\r\n  if (history.location.state && history.location.state.issueHeader) issueHeader = history.location.state.issueHeader;\r\n  if (history.location.state && history.location.state.issueBody) issueBody = history.location.state.issueBody;\r\n\r\n  return (\r\n    <div style={{ margin: \"10px\" }} className=\"center-wrapper\">\r\n      <h1 className=\"standard-text\">{issueHeader}</h1>\r\n      <br />\r\n      <h1 className=\"standard-text\">{issueBody}</h1>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Issue;\r\n","import Spotify from \"spotify-web-api-js\";\r\n//Wraps JPerez this.spotifyWebApi and exposes domain-specific functionality we need\r\nclass SpotifyClient extends Spotify {\r\n  isLoggedIn() {\r\n    return this.getAccessToken() === true;\r\n  }\r\n\r\n  async getSavedTracksAsync(totalPullCount = 300) {\r\n    let likedTracks = [];\r\n    try {\r\n      let limit = Math.min(50, totalPullCount);\r\n\r\n      const res = await this.getMySavedTracks();\r\n      const totalSavedCount = res.total;\r\n\r\n      for (let i = 0; i * limit < totalPullCount && i * limit < totalSavedCount; i++) {\r\n        const res = await this.getMySavedTracks({ offset: i * limit, limit: limit });\r\n        likedTracks.push(...res.items.map(o => o.track));\r\n      }\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n    return likedTracks;\r\n  }\r\n\r\n  async getArtistsFromTracksAsync(tracks) {\r\n    let artists = [];\r\n    try {\r\n      for (let track of tracks) {\r\n        const res = await this.getArtist(track.artists[0].id);\r\n        artists.push(res);\r\n      }\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n    return artists;\r\n  }\r\n\r\n  getUniqueGenreDataFromArtists(artists) {\r\n    //Create and populate dictionary\r\n    let uniqueGenreData = {};\r\n    for (let artist of artists) {\r\n      for (let artistGenre of artist.genres) {\r\n        if (uniqueGenreData[artistGenre]) uniqueGenreData[artistGenre]++;\r\n        else uniqueGenreData[artistGenre] = 1;\r\n      }\r\n    }\r\n\r\n    let sortedUniqueGenreData = [];\r\n\r\n    for (let genreKey in uniqueGenreData) sortedUniqueGenreData.push({ name: genreKey, count: uniqueGenreData[genreKey] });\r\n\r\n    sortedUniqueGenreData.sort((a, b) => {\r\n      return b.count - a.count;\r\n    });\r\n\r\n    return sortedUniqueGenreData;\r\n  }\r\n\r\n  async getNowPlayingAsync() {\r\n    try {\r\n      const res = await this.getMyCurrentPlaybackState();\r\n      return {\r\n        name: res.item.name,\r\n        image: res.item.album.images[0].url\r\n      };\r\n    } catch (ex) {\r\n      console.log(ex);\r\n    }\r\n  }\r\n}\r\n\r\nexport default SpotifyClient;\r\n","import axios from \"axios\";\r\n\r\naxios.interceptors.response.use(null, error => {\r\n  //In 400-500 range\r\n  const expectedError = error.response && error.response.status >= 400 && error.response.status < 500;\r\n\r\n  if (!expectedError) {\r\n    console.log(\"Logging the error\", error);\r\n    alert(\"An unexpected error occured.\");\r\n  }\r\n\r\n  return Promise.reject(error);\r\n});\r\n\r\nexport default {\r\n  get: axios.get,\r\n  post: axios.post,\r\n  put: axios.put,\r\n  delete: axios.delete\r\n};\r\n","import http from \"./httpService\";\r\n\r\nconst apiEndpoint = \"http://localhost:8888/api/auth\";\r\nconst newAccessTokenEndpoint = \"/refresh_token\";\r\n\r\nasync function getNewAccessToken(refreshToken) {\r\n  const request = apiEndpoint + newAccessTokenEndpoint + \"?refresh_token=\" + refreshToken;\r\n  return await http.get(request);\r\n}\r\n\r\nexport default {\r\n  getNewAccessToken\r\n};\r\n","import React, { Component } from \"react\";\r\nimport Theme from \"./common/theme\";\r\nimport Theming from \"../lib/misc/themeing\";\r\nimport Sposmos from \"./sposmos\";\r\nimport Begin from \"./begin\";\r\nimport NotFound from \"./notFound\";\r\nimport Playground from \"./playground\";\r\nimport NavBar from \"./navBar\";\r\nimport Callback from \"./callback\";\r\nimport Issue from \"./issue\";\r\nimport { withRouter, Route, Redirect, Switch } from \"react-router-dom\";\r\nimport SpotifyClient from \"../lib/http/spotifyClient\";\r\nimport authService from \"../lib/http/authService\";\r\n\r\nconst tokenValidityTime = 3500000;\r\n\r\nclass Main extends Component {\r\n  state = {\r\n    darkModeOn: true,\r\n    accessToken: \"\"\r\n  };\r\n\r\n  constructor() {\r\n    super();\r\n    this.theming = new Theming();\r\n    this.refreshToken = \"\";\r\n    this.spotifyClient = new SpotifyClient();\r\n\r\n    this.handleTokenTimeout = this.handleTokenTimeout.bind(this);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.setState({\r\n      darkModeOn: this.theming.getSavedDarkModeOnStatus()\r\n    });\r\n\r\n    this.redirectIfOnInvalidPageForState();\r\n  }\r\n\r\n  redirectIfOnInvalidPageForState() {\r\n    console.log(\"mounted at\", this.props.location.pathname);\r\n    if (this.props.location.pathname === \"/simulation\" && !this.state.accessToken)\r\n      this.props.history.push({ pathname: \"/begin\" });\r\n  }\r\n\r\n  handleToggleTheme() {\r\n    const darkModeOn = !this.state.darkModeOn;\r\n    this.setState({ darkModeOn });\r\n    this.theming.saveDarkModeOnStatus(darkModeOn);\r\n  }\r\n\r\n  async handleCallback(urlParams) {\r\n    if (!urlParams.access_token || !urlParams.refresh_token)\r\n      this.props.history.push({\r\n        pathname: \"/issue\",\r\n        state: { issueHeader: \"Data was not passed from spotify callback.\" }\r\n      });\r\n\r\n    this.spotifyClient.setAccessToken(urlParams.access_token);\r\n\r\n    let userProfile = null;\r\n    try {\r\n      userProfile = await this.spotifyClient.getMe();\r\n    } catch (ex) {\r\n      this.props.history.push({ pathname: \"/issue\", state: { issueHeader: \"Could not retrieve user profile.\" } });\r\n      return;\r\n    }\r\n\r\n    if (!userProfile) {\r\n      this.props.history.push({ pathname: \"/issue\", state: { issueHeader: \"Could not retrieve user profile.\" } });\r\n      return;\r\n    }\r\n\r\n    if (userProfile.product !== \"premium\") {\r\n      this.props.history.push({\r\n        pathname: \"/issue\",\r\n        state: {\r\n          issueHeader: \"Spotify premium is required for this app.\",\r\n          issueBody: \" Sign out of the current non-premium account through spotify if you have a premium account.\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n\r\n    this.setState({ accessToken: urlParams.access_token });\r\n    this.refreshToken = urlParams.refresh_token;\r\n    this.props.history.push({ pathname: \"/simulation\" });\r\n    setInterval(this.handleTokenTimeout, tokenValidityTime);\r\n  }\r\n\r\n  async handleTokenTimeout() {\r\n    console.log(\"going to try and request a new token\");\r\n    try {\r\n      const res = await authService.getNewAccessToken(this.refreshToken);\r\n      const token = res.data.access_token;\r\n      this.setState({ accessToken: token });\r\n      this.spotifyClient.setAccessToken(token);\r\n    } catch (ex) {\r\n      this.props.history.push({\r\n        pathname: \"/issue\",\r\n        state: {\r\n          issueHeader: \"Couldn't refresh spotify authentication. Please navigate to the home page and try again.\"\r\n        }\r\n      });\r\n      return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const theme = this.state.darkModeOn ? Theme.Dark : Theme.Light;\r\n    const { accessToken } = this.state;\r\n\r\n    return (\r\n      <Theme variables={theme}>\r\n        <div className=\"app-container\">\r\n          <div className=\"nav-area\">\r\n            <NavBar onThemeClick={this.handleToggleTheme.bind(this)} />\r\n          </div>\r\n          <div className=\"content-area\">\r\n            <Switch>\r\n              <Route path=\"/playground\" render={props => <Playground />} />\r\n              <Route\r\n                path=\"/simulation\"\r\n                render={props => <Sposmos spotifyClient={this.spotifyClient} accessToken={accessToken} />}\r\n              />\r\n              <Route path=\"/begin\" render={props => <Begin />} />\r\n              <Route path=\"/callback\" render={props => <Callback onCallback={this.handleCallback.bind(this)} />} />\r\n              <Route path=\"/issue\" component={Issue} />\r\n              <Route path=\"/not-found\" render={props => <NotFound />} />\r\n              <Redirect exact from=\"/\" to=\"/begin\" />\r\n              <Redirect to=\"/not-found\" />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </Theme>\r\n    );\r\n  }\r\n}\r\n\r\nexport default withRouter(Main);\r\n","import React, { Component } from \"react\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\nimport Main from \"./components/main\";\r\nimport \"./App.css\";\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <BrowserRouter>\r\n        <Main />\r\n      </BrowserRouter>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}